stdlib = import("stdlib")
fmt = import("fmt")
os = import("os")
net = import("net")
snmp = import("protocols/snmp")
log = import("tlog")
time = import("time")


addr ,_ = net.ResolveUDPAddr("udp","127.0.0.1:9163")
conn , err = net.ListenUDP("udp", addr)

buf = make([]byte, 3000)
user = make([]snmp.V3user, 1)
user[0] = make(snmp.V3user, 1)
user[0].User = "user"
user[0].AuthAlg = "MD5"
user[0].AuthPwd = "hellohello"
user[0].PrivAlg = "AES"
user[0].PrivPwd = "hellohello"
fmt.Println(user)
if err == nil {
  c = 0
  for ! stdlib.ExitRequested() {
    conn.SetReadDeadline(time.Now().Add(1 * time.Second))
    n, addr, err = conn.ReadFromUDP(buf)
    fmt.Println(c)
    if err {
      continue
    }
    if len(buf) > 0 {
      msg = buf[:n]
      res = snmp.ParseTrap3(user, conn, buf, n)
      for x,y in res.VarBinds {
        fmt.Println(x,y)
      }
      c += 1
    }
  }
  conn.Close()
}
log.Trace("We are done here")
