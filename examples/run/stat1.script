fmt = import("fmt")
df = import("dataframe")
stat = import("num/stat")

s1 = df.NewSeriesFloat64("float1", nil, 10.0,10.0,20.0,30.0,40.0)
s2 = df.NewSeriesFloat64("float2", nil, 11.0,10.0,30.0,25.0,48.0)

fmt.Println("p=",s1,"len=",len(s1.Values))
fmt.Println("q=",s2,"len=",len(s2.Values))
mean = stat.Mean(s1.Values, nil)
fmt.Println("dataset q is observed, dataset p is what expected")
fmt.Println("Mean value for the series of data p is", mean)
fmt.Println("Mean deviation for the series of data p is", stat.MeanStdDev(s1.Values, nil))
fmt.Println("Mean variance for the series of data p is", stat.MeanVariance(s1.Values, nil))
fmt.Println("Mean value for the series of data q is", stat.Mean(s2.Values, nil))
fmt.Println("CircularMean value for the series of data q is", stat.CircularMean(s2.Values, nil))
stdDev = stat.StdDev(s1.Values, nil)
fmt.Println("Standard deviation for p is", stdDev)
fmt.Println("Standard Error for p is",stat.StdErr(stdDev, len(s1.Values)))
fmt.Println("Skewness of p is",stat.Skew(s1.Values, nil))
m, n = stat.Mode(s1.Values, nil)
fmt.Println("Mode of p is",m,"with number of it",n)
fmt.Println("Moment of 13 in p is",stat.Moment(13.0, s1.Values, nil))
fmt.Println("Moment-about of 13 in p is",stat.MomentAbout(13.0, s1.Values, mean, nil))
fmt.Printf("ChiSquare distance between q and p is %f\n",stat.ChiSquare(s2.Values, s1.Values))
fmt.Printf("Correlation between q and p is %f\n",stat.Correlation(s2.Values, s1.Values, nil))
fmt.Printf("Covariance between q and p is %f\n",stat.Covariance(s2.Values, s1.Values, nil))
fmt.Printf("Cross entropy between q and p is %f\n",stat.CrossEntropy(s2.Values, s1.Values))
fmt.Printf("Entropy of q is %f\n",stat.Entropy(s2.Values))
fmt.Printf("Excess kurtosis of q is %f\n",stat.ExKurtosis(s2.Values, nil))
fmt.Printf("Bhattacharyya distance between p and q is %f\n",stat.Bhattacharyya(s1.Values, s2.Values))
